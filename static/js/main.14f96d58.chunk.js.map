{"version":3,"sources":["styles/theme.tsx","context/Theme.tsx","components/Clock.tsx","components/ThemeChanger.tsx","components/Navbar.tsx","components/Layout.tsx","hooks/useElementSize.ts","components/Button.tsx","components/Card.tsx","components/PageHeader.tsx","components/RadioSelect.tsx","constants/DEPARTAMENTS.ts","routes/Home.tsx","components/ExtendedPrompt.tsx","components/LoadingSpinner.tsx","components/Form/ErrorMessages.tsx","components/Form/InputWrapper.tsx","components/Form/Input.tsx","components/Form/TextArea.tsx","components/Form/Form.tsx","containers/ThankYouScreen.tsx","containers/ErrorScreen.tsx","utils/validateFormState.ts","utils/checkSecondsValue.ts","routes/Form.tsx","hooks/useFetch.ts","routes/PrivacyPolicy.tsx","styles/globalStyles.tsx","App.tsx","index.js"],"names":["PADDINGS","padding","layoutHorizontal","COMMON_COLOURS","main","light","dark","contrastText","inactive","lightTheme","colors","background","paper","default","text","primary","secondary","error","divider","darkTheme","THEMES","ThemeContext","createContext","theme","changeTheme","themeName","ThemeProvider","children","props","useState","setTheme","useCallback","Provider","value","dayjs","extend","customParseFormat","FORMAT_STRING","Clock","format","dateString","setDateString","useEffect","intervalId","setInterval","clearInterval","ThemeChanger","useContext","ToggleSwitch","onClick","title","icon","faSun","Toggle","active","faMoon","size","styled","button","span","forwardRef","forwardedRef","Wrapper","ref","Logo","LinksContainer","StyledLink","to","style","margin","header","h1","nav","Link","Layout","refToElement","useRef","setElementSize","current","getBoundingClientRect","addEventListener","console","log","handleResize","window","removeEventListener","useElementSize","height","navbarHeight","refToNavbar","ContentWrapper","marginTop","Button","type","disabled","StyledButton","tabIndex","undefined","Card","div","Header","Object","assign","PageHeader","h2","RadioSelect","options","setActive","Container","map","i","label","SelectOption","checked","StyledInput","id","name","onChange","StyledLabel","htmlFor","input","DEPARTAMENTS","Home","history","useHistory","choosenDepart","setChoosenDepart","dep","push","department","ExtendedPrompt","when","message","confirmExit","e","preventDefault","returnValue","LoadingSpinner","version","xmlns","x","y","width","viewBox","fill","d","attributeType","attributeName","from","dur","repeatCount","ErrorMessages","Errors","InputWrapper","errors","setErrorState","rest","touched","setTouched","errorState","length","InputContainer","Input","focused","setFocus","invalid","setInvalid","onFocusCapture","onBlurCapture","InputPadding","TextArea","maxLength","numberOfCharacters","toString","as","minHeight","LengthIndicator","StyledForm","form","LoadingOverlay","loading","ThankYouScreen","formData","overflow","maxWidth","JSON","stringify","ErrorScreen","useTheme","color","fontSize","stack","checkIfIsEmpty","trim","validateTextField","validateEmailField","match","validateTextAreaField","checkSecondsValue","seconds","second","Error","initialFormState","secondName","email","content","FormPage","state","useLocation","submitted","setSubmitted","setLoading","formState","setFormState","setErrors","formNotEmpty","setFormNotEmpty","values","find","v","result","setResult","a","fetch","then","res","json","placeholder","useFetch","prev","handleChange","target","areThereAnyErrors","onSubmit","setTimeout","PrivacyPolicy","GlobalStyle","createGlobalStyle","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14f96d58.chunk.js","sourcesContent":["import { DefaultTheme } from 'styled-components'\r\n\r\n// common colors\r\n\r\nconst PADDINGS: Pick<DefaultTheme, 'padding'> = {\r\n    padding: {\r\n        layoutHorizontal: 'min(3em, 5%)',\r\n    },\r\n}\r\n\r\nconst COMMON_COLOURS: Pick<DefaultTheme['colors'], 'main' | 'inactive'> = {\r\n    main: {\r\n        light: 'hsl(207,90%,70%)',\r\n        main: 'hsl(207,90%,54%)',\r\n        dark: 'hsl(207,90%,30%)',\r\n        contrastText: '#ffffff',\r\n    },\r\n    inactive: {\r\n        light: '#7b7b7bb7',\r\n        main: '#757373',\r\n        dark: '#444444',\r\n        contrastText: '#ffffff',\r\n    },\r\n}\r\n\r\n// light and dark themes\r\n\r\nconst lightTheme: DefaultTheme = {\r\n    colors: {\r\n        ...COMMON_COLOURS,\r\n        background: {\r\n            paper: '#fff',\r\n            default: '#fafafa',\r\n        },\r\n        text: {\r\n            primary: 'rgba(0, 0, 0, 0.87)',\r\n            secondary: 'rgba(0, 0, 0, 0.54)',\r\n            error: '#f44336',\r\n        },\r\n        divider: `rgba(0, 0, 0, 0.12)`,\r\n    },\r\n    ...PADDINGS,\r\n}\r\n\r\nconst darkTheme: DefaultTheme = {\r\n    colors: {\r\n        ...COMMON_COLOURS,\r\n        background: {\r\n            paper: '#393939',\r\n            default: '#303030',\r\n        },\r\n        text: {\r\n            primary: 'rgba(255, 255, 255, 1)',\r\n            secondary: 'rgba(255, 255, 255, 0.70)',\r\n            error: '#f44336',\r\n        },\r\n        divider: `rgba(255, 255, 255, 0.12)`,\r\n    },\r\n\r\n    ...PADDINGS,\r\n}\r\n\r\nexport { lightTheme, darkTheme }\r\n","import { ThemeProvider as StyledComponentsThemeProvider } from 'styled-components'\r\nimport { lightTheme, darkTheme } from 'src/styles/theme'\r\nimport React, { useCallback, useState } from 'react'\r\nimport { createContext } from 'react'\r\nimport { useContext } from 'react'\r\n\r\nconst THEMES = {\r\n    dark: darkTheme,\r\n    light: lightTheme,\r\n}\r\n\r\ntype ThemeType = keyof typeof THEMES\r\n\r\nconst ThemeContext = createContext<{\r\n    theme: ThemeType\r\n    changeTheme: (themeName: ThemeType) => void\r\n}>({\r\n    theme: 'light',\r\n    changeTheme: (themeName) => {},\r\n})\r\n\r\n/**\r\n *  Provider for changing theme, it allows easily add storing theme in some indexDB or in cookie\r\n */\r\nconst ThemeProvider = ({\r\n    children,\r\n    ...props\r\n}: {\r\n    children: React.ReactNode\r\n    [key: string]: any\r\n}) => {\r\n    const [theme, setTheme] = useState<ThemeType>('light')\r\n\r\n    const changeTheme = useCallback((themeName: ThemeType) => {\r\n        setTheme(themeName)\r\n    }, [])\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ theme, changeTheme }}>\r\n            <StyledComponentsThemeProvider theme={THEMES[theme]} {...props}>\r\n                {children}\r\n            </StyledComponentsThemeProvider>\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nconst useTheme = () => useContext(ThemeContext)\r\n\r\nexport { useTheme, ThemeProvider }\r\n","import dayjs from 'dayjs'\r\nimport customParseFormat from 'dayjs/plugin/customParseFormat'\r\nimport { useEffect, useState } from 'react'\r\n\r\ndayjs.extend(customParseFormat)\r\nconst FORMAT_STRING = 'DD/MM/YY HH:mm:ss'\r\n\r\nexport default function Clock({ ...props }) {\r\n    const [dateString, setDateString] = useState(dayjs().format(FORMAT_STRING))\r\n    useEffect(() => {\r\n        let intervalId = setInterval(() => {\r\n            setDateString(dayjs().format(FORMAT_STRING))\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(intervalId)\r\n        }\r\n    }, [])\r\n    return <div {...props}>{dateString}</div>\r\n}\r\n","import { useTheme } from 'src/context/Theme'\r\nimport styled from 'styled-components'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSun, faMoon } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function ThemeChanger() {\r\n    const { changeTheme, theme } = useTheme()\r\n\r\n    const toggleTheme = () => {\r\n        if (theme === 'light') {\r\n            changeTheme('dark')\r\n        }\r\n        if (theme === 'dark') {\r\n            changeTheme('light')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ToggleSwitch onClick={toggleTheme} title=\"change theme\">\r\n            <FontAwesomeIcon icon={faSun} />\r\n            <Toggle active={theme === 'light'} />\r\n            <FontAwesomeIcon icon={faMoon} />\r\n        </ToggleSwitch>\r\n    )\r\n}\r\n\r\nconst size = 1.5\r\n\r\nconst ToggleSwitch = styled.button`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n\r\n    position: relative;\r\n\r\n    width: ${size * 2}em;\r\n    height: ${size}em;\r\n\r\n    border-radius: 1000px;\r\n    background-color: ${(props) => props.theme.colors.background.paper};\r\n    color: ${(props) => props.theme.colors.text.secondary};\r\n`\r\n\r\nconst Toggle = styled.span<{ active: boolean }>`\r\n    position: absolute;\r\n    display: block;\r\n    height: ${size * 0.8}em;\r\n    width: ${size * 0.8}em;\r\n\r\n    border-radius: 50%;\r\n\r\n    background-color: ${(props) => props.theme.colors.main.light};\r\n\r\n    transform: translateX(${(props) => (props.active ? '50%' : '-50%')});\r\n\r\n    ${ToggleSwitch}:hover &,\r\n    ${ToggleSwitch}:focus & {\r\n        filter: brightness(0.8);\r\n    }\r\n\r\n    transition: transform 0.3s;\r\n`\r\n","import { forwardRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport Clock from './Clock'\r\nimport ThemeChanger from './ThemeChanger'\r\n\r\nexport default forwardRef<HTMLElement, {}>(function Navbar(props, forwardedRef) {\r\n    return (\r\n        <Wrapper ref={forwardedRef}>\r\n            <Logo>XYZ</Logo>\r\n\r\n            <LinksContainer>\r\n                <StyledLink to=\"/\">Home</StyledLink>\r\n                <StyledLink to=\"/policy\">Polityka Prwatności</StyledLink>\r\n            </LinksContainer>\r\n            <Clock style={{ margin: '1em' }} />\r\n            <ThemeChanger />\r\n        </Wrapper>\r\n    )\r\n})\r\n\r\nconst Wrapper = styled.header`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    padding: 0 ${(props) => props.theme.padding.layoutHorizontal};\r\n\r\n    background-color: ${(props) => props.theme.colors.main.main};\r\n    color: ${(props) => props.theme.colors.main.contrastText};\r\n    box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.24);\r\n`\r\n\r\nconst Logo = styled.h1`\r\n    margin-right: auto;\r\n`\r\n\r\nconst LinksContainer = styled.nav`\r\n    display: flex;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n    margin: 1em;\r\n`\r\n","import React from 'react'\r\nimport useElementSize from 'src/hooks/useElementSize'\r\nimport styled from 'styled-components'\r\nimport Navbar from './Navbar'\r\n\r\ntype LayoutProps = {\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function Layout({ children, ...props }: LayoutProps) {\r\n    const [{ height: navbarHeight = 100 }, refToNavbar] = useElementSize()\r\n\r\n    return (\r\n        <>\r\n            <Navbar ref={refToNavbar as any} />\r\n            <ContentWrapper marginTop={navbarHeight}>{children}</ContentWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ContentWrapper = styled.main<{ marginTop: number }>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 900px;\r\n    min-height: calc(100vh - ${(props) => props.marginTop}px);\r\n\r\n    padding: 1em ${(props) => props.theme.padding.layoutHorizontal};\r\n    margin: 0 auto;\r\n\r\n    color: ${(props) => props.theme.colors.text.secondary};\r\n`\r\n","import { useEffect, useRef, useState } from 'react'\r\n\r\ntype Size = Partial<Pick<DOMRect, 'height' | 'width' | 'x' | 'y'>>\r\n\r\n/**\r\n * hook that returns element size and position, and updates it on window resize\r\n */\r\nexport default function useElementSize(): [\r\n    size: Size,\r\n    ref: React.MutableRefObject<HTMLElement | undefined>\r\n] {\r\n    const refToElement = useRef<HTMLElement>()\r\n    const [size, setElementSize] = useState<Size>({})\r\n\r\n    useEffect(() => {\r\n        if (refToElement.current) {\r\n            setElementSize(refToElement.current.getBoundingClientRect())\r\n            refToElement.current?.addEventListener('resize', () => console.log('resize'))\r\n        }\r\n    }, [refToElement])\r\n\r\n    const handleResize = () => {\r\n        if (refToElement.current) setElementSize(refToElement.current.getBoundingClientRect())\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleResize)\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [refToElement])\r\n\r\n    return [size, refToElement]\r\n}\r\n","import styled, { DefaultTheme, StyledComponentProps } from 'styled-components'\r\n\r\ntype ExtendedButtonProps = { disabled?: boolean }\r\ntype ButtonProps = StyledComponentProps<'button', DefaultTheme, ExtendedButtonProps, never>\r\n\r\nexport default function Button({ children, type = 'button', disabled, ...props }: ButtonProps) {\r\n    return (\r\n        <StyledButton\r\n            type={type}\r\n            tabIndex={disabled ? -1 : undefined}\r\n            disabled={disabled}\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledButton>\r\n    )\r\n}\r\n\r\nconst StyledButton = styled.button<ExtendedButtonProps>`\r\n    font-weight: bold;\r\n    font-size: inherit;\r\n\r\n    padding: 0.4em 0.6em;\r\n    margin: 1em;\r\n\r\n    background-color: ${(props) =>\r\n        props.disabled ? props.theme.colors.inactive.main : props.theme.colors.main.main};\r\n    color: ${(props) => props.theme.colors.main.contrastText};\r\n\r\n    box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.24);\r\n    border-radius: 2px;\r\n\r\n    ${(props) => (props.disabled ? 'cursor: default; pointer-events: none;' : '')};\r\n\r\n    transition: background-color 0.3s;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nconst Card = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    width: 100%;\r\n    padding: 0.4em;\r\n\r\n    background-color: ${(props) => props.theme.colors.background.paper};\r\n    color: ${(props) => props.theme.colors.text.secondary};\r\n\r\n    border-radius: 4px;\r\n    border: 1px solid ${(props) => props.theme.colors.divider};\r\n`\r\n\r\nconst Header = styled.div`\r\n    font-weight: bolder;\r\n    font-size: larger;\r\n\r\n    margin: 0.4em 0;\r\n\r\n    color: ${(props) => props.theme.colors.text.primary};\r\n`\r\n\r\nexport default Object.assign(Card, { Header })\r\n","import styled from 'styled-components'\r\n\r\nconst PageHeader = styled.h2`\r\n    font-size: 2em;\r\n\r\n    color: ${(props) => props.theme.colors.text.primary};\r\n`\r\n\r\nexport default PageHeader\r\n","import styled from 'styled-components'\r\n\r\ntype RadioSelectProps = {\r\n    options: Array<{ label: string; value: any }>\r\n    active?: any\r\n    setActive: (value: any) => void\r\n}\r\n\r\nexport default function RadioSelect({ options, active, setActive }: RadioSelectProps) {\r\n    return (\r\n        <Container>\r\n            {options.map(({ label, value }, i) => (\r\n                <SelectOption key={i} checked={active === value}>\r\n                    <StyledInput\r\n                        type=\"radio\"\r\n                        id={label}\r\n                        name={label}\r\n                        value={value}\r\n                        checked={active === value}\r\n                        onChange={() => setActive(value)}\r\n                    />\r\n                    <StyledLabel htmlFor={label}>{label}</StyledLabel>\r\n                </SelectOption>\r\n            ))}\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    margin: 1em;\r\n`\r\nconst SelectOption = styled.div<{ checked: boolean }>`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    color: ${(props) => (props.checked ? props.theme.colors.main.main : 'inherit')};\r\n\r\n    margin: 1em;\r\n    cursor: pointer;\r\n\r\n    &:hover,\r\n    &:focus-within {\r\n        color: ${(props) => (!props.checked ? props.theme.colors.main.light : '')};\r\n    }\r\n\r\n    transition: color 0.3s;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n    margin: 0.6em;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    appearance: none;\r\n\r\n    border-radius: 50%;\r\n    width: 16px;\r\n    height: 16px;\r\n\r\n    cursor: inherit;\r\n\r\n    border: 2px solid #999;\r\n    transition: 0.2s all linear;\r\n\r\n    &::after {\r\n        content: '';\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: inherit;\r\n\r\n        background-color: ${(props) => props.theme.colors.main.main};\r\n\r\n        transform: scale(0);\r\n        transition: transform 0.2s;\r\n    }\r\n\r\n    &:checked {\r\n        border: 2px solid ${(props) => props.theme.colors.main.main};\r\n        &::after {\r\n            transform: scale(0.9);\r\n        }\r\n    }\r\n`\r\n\r\nconst StyledLabel = styled.label`\r\n    cursor: inherit;\r\n`\r\n","const DEPARTAMENTS = ['XYZ Warszawa, Poland', 'ABC Kraków, Poland', 'RNQ Berlin, Germany'] as const\r\n\r\nexport default DEPARTAMENTS\r\n","import { useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport Button from 'src/components/Button'\r\nimport Card from 'src/components/Card'\r\nimport PageHeader from 'src/components/PageHeader'\r\nimport RadioSelect from 'src/components/RadioSelect'\r\nimport DEPARTAMENTS from '../constants/DEPARTAMENTS'\r\n\r\nexport default function Home() {\r\n    const history = useHistory()\r\n    const [choosenDepart, setChoosenDepart] = useState<typeof DEPARTAMENTS[number]>()\r\n\r\n    const handleGoToForm = () => {\r\n        history.push('/form', { department: choosenDepart })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageHeader>Home</PageHeader>\r\n            <Card>\r\n                <Card.Header>Wybierz oddział</Card.Header>\r\n                <RadioSelect\r\n                    options={DEPARTAMENTS.map((dep) => ({ label: dep, value: dep }))}\r\n                    active={choosenDepart}\r\n                    setActive={setChoosenDepart}\r\n                />\r\n                <Button onClick={handleGoToForm} disabled={typeof choosenDepart === 'undefined'}>\r\n                    Dalej\r\n                </Button>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import { useCallback, useEffect } from 'react'\r\nimport { Prompt, PromptProps } from 'react-router'\r\n\r\ntype ExtendedPromptProps = PromptProps\r\n\r\n/**\r\n * Component that extends reacts-router's <Prompt /> functionality by adding prompt on reload, and tab close\r\n */\r\nexport default function ExtendedPrompt({ when, message }: ExtendedPromptProps) {\r\n    // alert before leaving the page\r\n\r\n    const confirmExit = useCallback(\r\n        (e: BeforeUnloadEvent) => {\r\n            e.preventDefault()\r\n            e.returnValue = message\r\n        },\r\n        [message]\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (when) {\r\n            window.addEventListener('beforeunload', confirmExit)\r\n        } else {\r\n            window.removeEventListener('beforeunload', confirmExit)\r\n        }\r\n\r\n        return () => window.removeEventListener('beforeunload', confirmExit)\r\n    }, [confirmExit, when])\r\n\r\n    return <Prompt when={when} message={message} />\r\n}\r\n","export default function LoadingSpinner() {\r\n    return (\r\n        <div>\r\n            <svg\r\n                version=\"1.1\"\r\n                id=\"loader-1\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                x=\"0px\"\r\n                y=\"0px\"\r\n                width=\"40px\"\r\n                height=\"40px\"\r\n                viewBox=\"0 0 50 50\"\r\n            >\r\n                <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z\"\r\n                >\r\n                    <animateTransform\r\n                        attributeType=\"xml\"\r\n                        attributeName=\"transform\"\r\n                        type=\"rotate\"\r\n                        from=\"0 25 25\"\r\n                        to=\"360 25 25\"\r\n                        dur=\"0.6s\"\r\n                        repeatCount=\"indefinite\"\r\n                    />\r\n                </path>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ntype ErrorMessagesProps = {\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function ErrorMessages({ children }: ErrorMessagesProps) {\r\n    return <Errors>{children}</Errors>\r\n}\r\n\r\nconst Errors = styled.div`\r\n    display: flex;\r\n    & > * {\r\n        margin: 0 0.3em;\r\n    }\r\n\r\n    color: ${(props) => props.theme.colors.text.error};\r\n`\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport ErrorMessages from './ErrorMessages'\r\n\r\ntype InputWrapperProps = {\r\n    children: React.ReactNode\r\n    value: any\r\n    errors?: Array<string>\r\n    setErrorState: (errorState: boolean) => void\r\n    [key: string]: any\r\n}\r\n\r\nexport default function InputWrapper({\r\n    value,\r\n    children,\r\n    errors,\r\n    setErrorState,\r\n    ...rest\r\n}: InputWrapperProps) {\r\n    const [touched, setTouched] = useState(false)\r\n    useEffect(() => {\r\n        if (value) setTouched(true)\r\n    }, [value])\r\n\r\n    const errorState = !!errors?.length && touched\r\n\r\n    useEffect(() => {\r\n        setErrorState(errorState)\r\n    }, [errorState, setErrorState])\r\n\r\n    return (\r\n        <Wrapper>\r\n            <InputContainer {...rest}>{children}</InputContainer>\r\n            {errorState && (\r\n                <ErrorMessages>\r\n                    {errors?.map((e, i) => (\r\n                        <div key={i}>{`${e}, `}</div>\r\n                    ))}\r\n                </ErrorMessages>\r\n            )}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    margin: 1em;\r\n    width: 100%;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n    position: relative;\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n\r\n    width: 100%;\r\n`\r\n","import { useState } from 'react'\r\nimport styled, { DefaultTheme, StyledComponentProps } from 'styled-components'\r\nimport InputWrapper from './InputWrapper'\r\n\r\nexport type ExtendedInputProps = {\r\n    label: string\r\n    id?: string\r\n    errors?: Array<string>\r\n}\r\n\r\nconst Input = ({\r\n    label,\r\n    value,\r\n    errors,\r\n    ...props\r\n}: StyledComponentProps<'input', DefaultTheme, ExtendedInputProps, never>) => {\r\n    const [focused, setFocus] = useState<boolean>(false)\r\n    const [invalid, setInvalid] = useState(false)\r\n\r\n    return (\r\n        <InputWrapper\r\n            onFocusCapture={() => setFocus(true)}\r\n            onBlurCapture={() => setFocus(false)}\r\n            value={value}\r\n            errors={errors}\r\n            setErrorState={setInvalid}\r\n        >\r\n            <StyledInput {...props} value={value} invalid={invalid} />\r\n            <StyledLabel focused={focused || !!value}>{label}</StyledLabel>\r\n        </InputWrapper>\r\n    )\r\n}\r\n\r\nexport default Input\r\n\r\nexport const InputPadding = '0.5em'\r\n\r\nexport const StyledInput = styled.input<{ invalid: boolean }>`\r\n    padding: 0.3em ${InputPadding};\r\n    max-width: 100%;\r\n    width: 100%;\r\n\r\n    font-family: inherit;\r\n    font-size: inherit;\r\n    font-weight: inherit;\r\n    color: inherit;\r\n    background-color: inherit;\r\n\r\n    border-radius: 0.3em;\r\n    border: 1px solid\r\n        ${(props) => (props.invalid ? props.theme.colors.text.error : 'rgba(0, 0, 0, 0.2)')};\r\n\r\n    &:focus {\r\n        border-color: ${(props) => props.theme.colors.main.light};\r\n    }\r\n\r\n    resize: none;\r\n`\r\n\r\nconst StyledLabel = styled.label<{ focused: boolean }>`\r\n    position: absolute;\r\n    left: 0;\r\n\r\n    margin: ${InputPadding};\r\n\r\n    ${(props) =>\r\n        props.focused\r\n            ? `transform: translate(0, calc(-100% - ${InputPadding})) scale(0.8);\r\n    color: ${props.theme.colors.main.main};\r\n    }`\r\n            : ''}\r\n\r\n    transform-origin: left center;\r\n    transition: transform 0.4s, color 0.3s;\r\n`\r\n","import { useState } from 'react'\r\nimport styled, { DefaultTheme, StyledComponentProps } from 'styled-components'\r\nimport { ExtendedInputProps, StyledInput } from './Input'\r\nimport InputWrapper from './InputWrapper'\r\n\r\nconst TextArea = ({\r\n    maxLength,\r\n    value,\r\n    errors,\r\n    ...props\r\n}: StyledComponentProps<'textarea', DefaultTheme, Omit<ExtendedInputProps, 'label'>, never>) => {\r\n    const numberOfCharacters = value?.toString().length\r\n    const [invalid, setInvalid] = useState(false)\r\n\r\n    return (\r\n        <InputWrapper value={value} setErrorState={setInvalid} errors={errors}>\r\n            <StyledInput\r\n                as={'textarea'}\r\n                style={{ minHeight: '300px' }}\r\n                value={value}\r\n                maxLength={maxLength}\r\n                invalid={invalid}\r\n                {...props}\r\n            />\r\n\r\n            <LengthIndicator>\r\n                {numberOfCharacters}/{maxLength}\r\n            </LengthIndicator>\r\n        </InputWrapper>\r\n    )\r\n}\r\n\r\nexport default TextArea\r\n\r\nconst LengthIndicator = styled.div`\r\n    position: absolute;\r\n    top: 100%;\r\n    right: 0;\r\n`\r\n","import styled, { DefaultTheme, StyledComponentProps } from 'styled-components'\r\nimport LoadingSpinner from '../LoadingSpinner'\r\nimport Input from './Input'\r\nimport TextArea from './TextArea'\r\n\r\ntype ExtendedFormProps = {\r\n    loading?: boolean\r\n}\r\n\r\nconst Form = ({\r\n    children,\r\n    loading = false,\r\n    ...props\r\n}: StyledComponentProps<'form', DefaultTheme, ExtendedFormProps, never>) => {\r\n    return (\r\n        <StyledForm {...props}>\r\n            {children}\r\n            {loading && (\r\n                <LoadingOverlay>\r\n                    <div>Just simulating real request</div>\r\n                    <LoadingSpinner />\r\n                </LoadingOverlay>\r\n            )}\r\n        </StyledForm>\r\n    )\r\n}\r\n\r\nconst StyledForm = styled.form`\r\n    position: relative;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    max-width: 500px;\r\n    width: 100%;\r\n`\r\n\r\nconst LoadingOverlay = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #dadada95;\r\n    border-radius: 10px;\r\n`\r\n\r\nexport default Object.assign(Form, { Input, TextArea })\r\n","import { useHistory } from 'react-router-dom'\r\nimport Button from 'src/components/Button'\r\nimport Card from 'src/components/Card'\r\nimport PageHeader from 'src/components/PageHeader'\r\nimport { FormState } from 'src/globalTypes'\r\n\r\ntype ThankYouScreenProps = {\r\n    formData: FormState\r\n}\r\n\r\nexport default function ThankYouScreen({ formData }: ThankYouScreenProps) {\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <>\r\n            <PageHeader>Dziękujemy za zgłoszenie</PageHeader>\r\n            <Card>\r\n                <Card.Header>Wysłane dane:</Card.Header>\r\n                <pre style={{ overflow: 'auto', maxWidth: '100%' }}>\r\n                    {JSON.stringify(formData, undefined, 2)}\r\n                </pre>\r\n            </Card>\r\n            <div>\r\n                <Button onClick={() => history.push('/')}>Wróć</Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useHistory } from 'react-router'\r\nimport Button from 'src/components/Button'\r\nimport PageHeader from 'src/components/PageHeader'\r\nimport { useTheme } from 'styled-components'\r\nimport Card from '../components/Card'\r\n\r\ntype ErrorsScreenProps = {\r\n    errors: Array<Error>\r\n}\r\n\r\nexport default function ErrorScreen({ errors }: ErrorsScreenProps) {\r\n    const { colors } = useTheme()\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <>\r\n            <PageHeader>Wystąpił nieznany błąd</PageHeader>\r\n            <Card style={{ color: colors.text.error }}>\r\n                {errors.map((e) => (\r\n                    <>\r\n                        <pre style={{ fontSize: '2em' }}>{e.message}</pre>\r\n                        <pre> {JSON.stringify(e.stack, undefined, 2)} </pre>\r\n                    </>\r\n                ))}\r\n            </Card>\r\n            <Button onClick={() => history.push('/')}>Wróc na strone startową</Button>\r\n        </>\r\n    )\r\n}\r\n","const emptyError = 'pole nie może być puste'\r\nconst emailError = 'proszę wprowadzić prawidłowy email'\r\nconst toLongError = 'wiadomość jest zbyt długa'\r\n\r\nconst checkIfIsEmpty = (value: string, errors: Array<string>) => {\r\n    if (!value.toString().trim()) {\r\n        errors.push(emptyError)\r\n    }\r\n}\r\n\r\nconst validateTextField = (value: string) => {\r\n    let errors: Array<string> = []\r\n    checkIfIsEmpty(value, errors)\r\n    return errors.length ? errors : undefined\r\n}\r\n\r\nconst validateEmailField = (value: string) => {\r\n    const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n    let errors: Array<string> = []\r\n    checkIfIsEmpty(value, errors)\r\n    if (!value.match(emailRegex)) {\r\n        errors.push(emailError)\r\n    }\r\n\r\n    return errors.length ? errors : undefined\r\n}\r\n\r\nconst validateTextAreaField = (value: string, maxLength: number) => {\r\n    let errors: Array<string> = []\r\n    checkIfIsEmpty(value, errors)\r\n\r\n    const numberOfCharacters = value?.toString().length\r\n    if (numberOfCharacters === maxLength) {\r\n        errors.push(toLongError)\r\n    }\r\n\r\n    return errors.length ? errors : undefined\r\n}\r\n\r\nexport { validateTextAreaField, validateEmailField, validateTextField }\r\n","import dayjs from 'dayjs'\r\n\r\n/**\r\n * throws an error if seconds on clock are beetween 10-19 or 30-39 or 50-59\r\n */\r\nconst checkSecondsValue = () => {\r\n    const seconds = dayjs().second()\r\n    if (\r\n        (seconds >= 10 && seconds <= 19) ||\r\n        (seconds >= 30 && seconds <= 39) ||\r\n        (seconds >= 50 && seconds <= 59)\r\n    ) {\r\n        throw new Error('seconds on clock are beetween 10-19 or 30-39 or 50-59')\r\n    }\r\n}\r\n\r\nexport default checkSecondsValue\r\n","import { ChangeEvent, useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router'\r\nimport Button from 'src/components/Button'\r\nimport Card from 'src/components/Card'\r\nimport ExtendedPrompt from 'src/components/ExtendedPrompt'\r\nimport Form from 'src/components/Form/Form'\r\nimport PageHeader from 'src/components/PageHeader'\r\nimport DEPARTAMENTS from 'src/constants/DEPARTAMENTS'\r\nimport ThankYouScreen from 'src/containers/ThankYouScreen'\r\nimport ErrorScreen from 'src/containers/ErrorScreen'\r\nimport { FormState } from 'src/globalTypes'\r\nimport useFetch from 'src/hooks/useFetch'\r\nimport {\r\n    validateEmailField,\r\n    validateTextAreaField,\r\n    validateTextField,\r\n} from 'src/utils/validateFormState'\r\nimport checkSecondsValue from 'src/utils/checkSecondsValue'\r\n\r\nconst initialFormState: FormState = {\r\n    name: '',\r\n    secondName: '',\r\n    email: '',\r\n    content: '',\r\n}\r\n\r\ntype ErrorsState = Partial<Record<keyof FormState, Array<string>> & { form: Array<Error> }>\r\n\r\nconst MAX_CONTENT_LENGTH = 5000\r\n\r\nexport default function FormPage() {\r\n    const { state } = useLocation<{ department: typeof DEPARTAMENTS[number] }>()\r\n    const history = useHistory()\r\n\r\n    // handling typing url directly in the browser\r\n    useEffect(() => {\r\n        if (!state || !state.department) {\r\n            history.push('/')\r\n        }\r\n    }, [history, state])\r\n\r\n    const [submitted, setSubmitted] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [formState, setFormState] = useState<FormState>(initialFormState)\r\n    const [errors, setErrors] = useState<ErrorsState>({})\r\n\r\n    // formNotEmpty is changed independently from formState after submission\r\n    const [formNotEmpty, setFormNotEmpty] = useState(false)\r\n    useEffect(() => {\r\n        const formNotEmpty = !!Object.values(formState).find((v) => !!v)\r\n        setFormNotEmpty(formNotEmpty)\r\n\r\n        // validating form fields\r\n        setErrors({\r\n            name: validateTextField(formState.name),\r\n            secondName: validateTextField(formState.secondName),\r\n            email: validateEmailField(formState.email),\r\n            content: validateTextAreaField(formState.content, MAX_CONTENT_LENGTH),\r\n        })\r\n    }, [formState])\r\n\r\n    const { result: placeholder = '' } = useFetch<string>(\r\n        'https://baconipsum.com/api/?type=all-meat&paras=2'\r\n    )\r\n\r\n    useEffect(() => {\r\n        setFormState((prev) => ({ ...prev, content: placeholder }))\r\n    }, [placeholder])\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setFormState((prev) => ({ ...prev, [e.target.name]: e.target.value }))\r\n    }\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        // simulating real word error handling\r\n        try {\r\n            checkSecondsValue()\r\n            setLoading(true)\r\n            // if some hacker tries to edit html directly and deletes disabled class from button\r\n            if (areThereAnyErrors) {\r\n                throw new Error('błędne dane')\r\n            }\r\n            // simulating sending real request\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n                setSubmitted(true)\r\n                setFormNotEmpty(false)\r\n            }, 1000)\r\n        } catch (e) {\r\n            setErrors({ form: [e] })\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const areThereAnyErrors = !!Object.values(errors).find((v) => !!v)\r\n\r\n    if (errors.form?.length) {\r\n        return <ErrorScreen errors={errors.form} />\r\n    }\r\n\r\n    /* rendering 2 screens on the same route to not making 'thank u' url  */\r\n    return (\r\n        <>\r\n            {!submitted ? (\r\n                <>\r\n                    <PageHeader>Formularz zgłoszeniowy</PageHeader>\r\n                    <Card>\r\n                        <Card.Header>{state?.department}</Card.Header>\r\n                        <Form onSubmit={handleSubmit} loading={loading}>\r\n                            <Form.Input\r\n                                type=\"text\"\r\n                                label={'Imię'}\r\n                                name=\"name\"\r\n                                title=\"Enter your name\"\r\n                                onChange={handleChange}\r\n                                value={formState.name}\r\n                                errors={errors.name}\r\n                            />\r\n                            <Form.Input\r\n                                type=\"text\"\r\n                                label={'Nazwisko'}\r\n                                name=\"secondName\"\r\n                                title=\"Enter your second name\"\r\n                                onChange={handleChange}\r\n                                value={formState.secondName}\r\n                                errors={errors.secondName}\r\n                            />\r\n                            <Form.Input\r\n                                type=\"email\"\r\n                                label={'Email'}\r\n                                name=\"email\"\r\n                                title=\"Enter your email\"\r\n                                onChange={handleChange}\r\n                                value={formState.email}\r\n                                errors={errors.email}\r\n                            />\r\n                            <Form.TextArea\r\n                                name=\"content\"\r\n                                title=\"Write something\"\r\n                                onChange={handleChange}\r\n                                maxLength={MAX_CONTENT_LENGTH}\r\n                                value={formState.content}\r\n                                errors={errors.content}\r\n                            />\r\n                            <Button type=\"submit\" disabled={areThereAnyErrors}>\r\n                                Wyślij\r\n                            </Button>\r\n                        </Form>\r\n                    </Card>\r\n                    <ExtendedPrompt\r\n                        when={formNotEmpty}\r\n                        message={\r\n                            'Formularz posiada nie wysłane dane, czy jesteś pewny że chcesz opuścić stronę ?'\r\n                        }\r\n                    />\r\n                </>\r\n            ) : (\r\n                <ThankYouScreen formData={formState} />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport default function useFetch<T>(input: RequestInfo) {\r\n    const [result, setResult] = useState<T>()\r\n    const [loading, setLoading] = useState<boolean>()\r\n    useEffect(() => {\r\n        ;(async () => {\r\n            const placeholder = await fetch(input).then((res) => res.json())\r\n\r\n            setResult(placeholder)\r\n            setLoading(false)\r\n        })()\r\n    }, [input])\r\n\r\n    return { result, loading }\r\n}\r\n","import PageHeader from 'src/components/PageHeader'\r\n\r\nexport default function PrivacyPolicy() {\r\n    return (\r\n        <>\r\n            <PageHeader>Polityka Prywatności</PageHeader>\r\n            <section>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\r\n                    incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis\r\n                    nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                    Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\r\n                    fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\r\n                    culpa qui officia deserunt mollit anim id est laborum.\r\n                </p>\r\n                <p>\r\n                    Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium\r\n                    doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore\r\n                    veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam\r\n                    voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia\r\n                    consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque\r\n                    porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci\r\n                    velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore\r\n                    magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum\r\n                    exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi\r\n                    consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit\r\n                    esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo\r\n                    voluptas nulla pariatur?\r\n                </p>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    body {\r\n        margin: 0;\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n            'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n            sans-serif;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n\r\n        background-color: ${(props) => props.theme.colors.background.default};\r\n    }\r\n\r\n    code {\r\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',monospace;\r\n    }\r\n\r\n    pre { white-space: pre-wrap; }\r\n\r\n    * :focus {\r\n            outline: none;\r\n    }\r\n    * :focus:not(input):not(textarea):not(:active) {\r\n            outline: 1px solid ${(props) => props.theme.colors.divider};\r\n    }\r\n\r\n    a{\r\n        color: inherit;\r\n        text-decoration: none;\r\n        &:hover, &:focus{\r\n            filter: opacity(0.6);\r\n        }\r\n    }\r\n\r\n    button {\r\n        outline: none;\r\n        border: none;\r\n        color: inherit;\r\n        font-family: inherit;\r\n        cursor: pointer;\r\n        \r\n    }\r\n`\r\n","import { ThemeProvider } from './context/Theme'\nimport Layout from './components/Layout'\nimport Home from './routes/Home'\nimport Form from './routes/Form'\nimport PrivacyPolicy from './routes/PrivacyPolicy'\nimport { GlobalStyle } from './styles/globalStyles'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nfunction App() {\n    return (\n        <ThemeProvider>\n            <GlobalStyle />\n\n            <Router basename={'xyz-contact-form'}>\n                <Layout>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Home />\n                        </Route>\n                        <Route path=\"/form\">\n                            <Form />\n                        </Route>\n                        <Route path=\"/policy\">\n                            <PrivacyPolicy />\n                        </Route>\n                    </Switch>\n                </Layout>\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","/// <reference path=\"./styled.d.ts\" />\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}